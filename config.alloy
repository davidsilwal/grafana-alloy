 logging {
        level  = "info"
        format = "logfmt"
      }

otelcol.receiver.otlp "otlp_receiver" {
  grpc {
    endpoint = "0.0.0.0:4317"
  }
  http {
    endpoint = "0.0.0.0:4318"
  }

  output {
    metrics = [otelcol.exporter.prometheus.default.input]
    logs = [otelcol.exporter.loki.default.input]
    traces  = [otelcol.processor.batch.example.input]
  }
}

otelcol.exporter.prometheus "default" {
  forward_to = [prometheus.remote_write.default.receiver]
}

otelcol.exporter.loki "default" {
  forward_to = [loki.process.local.receiver]
}


loki.write "default" {
  endpoint {
    url = "http://loki:3100/loki/api/v1/push"
  }
}

loki.process "local" {
  forward_to = [loki.write.default.receiver]

  stage.json {
    expressions = {
      attributes = "",
    }
  }

  stage.json {
    source      = "attributes"
    expressions = {
      ConnectionId = "",
      Method       = "",
    }
  }

  stage.labels {
    values = {
      connection_id = "ConnectionId",
      method        = "Method",
    }
  }
}

otelcol.processor.batch "example" {
  output {
    traces  = [otelcol.exporter.otlp.default.input]
  }
}


otelcol.exporter.otlp "default" {
    client {
        endpoint = "tempo:4317"
        tls {
            insecure             = true
            insecure_skip_verify = true
        }
    }
}


prometheus.remote_write "default" {
 endpoint {
    url = "http://mimir:9009/api/v1/push"
  }
}